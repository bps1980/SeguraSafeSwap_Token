{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xE39d6Cba4E1117376bC505A9aeD224a22C761fe0",
      "txHash": "0x395acbac65028499667dbc6772eeee1a7b3b01531c6b7230f7bbaa143da0682f",
      "kind": "uups"
    },
    {
      "address": "0xf3272D71e6aF10fdc638e13F54bE535f6f05E631",
      "txHash": "0xce388aa003b4a217bd2534b99319abef8dbbc01ad975401018c624f6f65802ce",
      "kind": "uups"
    },
    {
      "address": "0xA76A03D424E4a3b5D7c0E616490cC1B8901347e3",
      "txHash": "0x617c7278e6f16a1ba52342e2afcea1b5fe4ab684ababd73ae53af8b2c697a7a0",
      "kind": "uups"
    },
    {
      "address": "0xCddB5c527F5EB2389195A8464959f1528D55D428",
      "txHash": "0x1b24e7d01934bc6b80db75e5d7d9f2e47c5fe0f10f7327cc81c61c2e346306cd",
      "kind": "uups"
    },
    {
      "address": "0x91417717151495d207d3045a72fd9a06B35462EB",
      "txHash": "0x7e7fdca06606b29a0cda535324ebcc0ee2e8dceeb7ac68c8d519c58c5567f197",
      "kind": "uups"
    },
    {
      "address": "0x3ee7BC70d4B0a5568257d28312702186D4F5807e",
      "txHash": "0xc085139a422b54a124db74bd9cd1ff7c85a5d269badb9688cdecdb94e6758a68",
      "kind": "uups"
    }
  ],
  "impls": {
    "20d2f739b69faceb5eecd6d2aeeea4e44cbb14fd91cf9588252d039fe19c7695": {
      "address": "0xd610A1A6d336b8f205DBe506f2A06b071c5deB93",
      "txHash": "0x285a7d2fb5df9c4be58d7737d472a76c06b3b4acb5e879320c197ee6f3399818",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_paused",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "proposals",
            "offset": 0,
            "slot": "50",
            "type": "t_mapping(t_uint256,t_struct(Proposal)9001_storage)",
            "contract": "SeguraSafeSwapToken",
            "src": "contracts/SeguraSafeSwapToken.sol:32"
          },
          {
            "label": "hasVoted",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "SeguraSafeSwapToken",
            "src": "contracts/SeguraSafeSwapToken.sol:33"
          },
          {
            "label": "nextProposalId",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "SeguraSafeSwapToken",
            "src": "contracts/SeguraSafeSwapToken.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)32_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)233_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)82_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Proposal)9001_storage)": {
            "label": "mapping(uint256 => struct SeguraSafeSwapToken.Proposal)",
            "numberOfBytes": "32"
          },
          "t_struct(Proposal)9001_storage": {
            "label": "struct SeguraSafeSwapToken.Proposal",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "deadline",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
